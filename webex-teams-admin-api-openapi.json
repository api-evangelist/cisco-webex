{
    "openapi": "3.0.0",
    "info": {
        "version": "",
        "title": "Webex Teams Admin API",
        "description": "The Webex Teams API includes administration APIs that allow administrators to programatically perform administration actions such as provisioning a user. By automating administration, user management and provisioning can be centralized in an existing tool, rather than using the Webex Teams Control Hub. For example, a partner selling multiple Collaboration tools to customers can use these APIs to enable Webex Teams provisioning through a centralized portal.\n\nhttps:\/\/developer.webex.com\/admin-api.html\n\n\n## What's possible with Admin APIs?\n\nCurrently, administration is focused on User Provisioning. Using these APIs, an admin can:\n\n- Create a user\n- Update a user\n- View license usage of an organization\n- View available roles of an organization\n- Manage Hybrid Services licenses and users\n\n\n## Authentication\n\nUse of these APIs requires you to be an administrator of an organization.\n\nIf you are an administrator, you can login here to get a development auth token with necessary scopes.\n\nCreati",
        "termsOfService": ""
    },
    "servers": [
        "httpsapi.ciscospark.com\/v1"
    ],
    "paths": {
        "\/people\/{_person}": {
            "get": {
                "summary": "Get Person Details1",
                "description": "Shows details for a person, by ID.\nSpecify the person ID in the personId parameter in the URI.\n\nhttps:\/\/developer.webex.com\/endpoint-people-personId-get.html",
                "operationId": "PeopleByPersonGet2",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "_person",
                        "in": "path",
                        "description": ""
                    }
                ]
            },
            "put": {
                "summary": "Update a Person",
                "description": "Update details for a person, by ID.\r\n\r\nSpecify the person ID in the personId parameter in the URI. Only an admin can update a person details.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-people-personId-put.html\r\n\r\nExample Request:\r\n``` json\r\n{\r\n  'emails\" : [ 'johnny.chang@foomail.com', 'jchang@barmail.com' ],\r\n  'displayName' : 'John Andersen',\r\n  'firstName' : 'John',\r\n  'lastName' : 'Andersen',\r\n  'avatar' : 'https:\/\/1efa7a94ed21783e352-c62266528714497a17239ececf39e9e2.ssl.cf1.rackcdn.com\/V1~54c8",
                "operationId": "PeopleByPersonPut",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "Body",
                        "in": "body",
                        "description": ""
                    },
                    {
                        "name": "Content",
                        "in": "header",
                        "description": ""
                    },
                    {
                        "name": "_person",
                        "in": "path",
                        "description": ""
                    }
                ]
            },
            "delete": {
                "summary": "Delete a Person",
                "description": "Remove a person from the system. Only an admin can remove a person.\n\nSpecify the person ID in the personId parameter in the URI.\n\nhttps:\/\/developer.webex.com\/endpoint-people-personId-delete.html",
                "operationId": "PeopleByPersonDelete",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "_person",
                        "in": "path",
                        "description": ""
                    }
                ]
            }
        },
        "\/roles": {
            "get": {
                "summary": "Get roles (to fetch a role id)",
                "description": "List all roles.\n\nhttps:\/\/developer.webex.com\/endpoint-roles-get.html\n\nExample Response:\n``` json\n{\n  'items' : [ {\n    'id' : 'OTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh',\n    'displayName' : 'Full Administrator'\n  } ]\n}\n```",
                "operationId": "RolesGet2",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/licenses\/{_license}": {
            "get": {
                "summary": "Get License Details",
                "description": "Shows details for a license, by ID.\r\n\r\nSpecify the license ID in the licenseId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-licenses-licenseId-get.html\r\n\r\nExample Response:\r\n``` json\r\n{\r\n  'id' : 'OTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh',\r\n  'displayName' : 'Spark Calling',\r\n  'totalUnits' : '42',\r\n  'consumedUnits' : \"8'\r\n}\r\n```",
                "operationId": "LicensesByLicenseGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "_license",
                        "in": "path",
                        "description": ""
                    }
                ]
            }
        },
        "\/roles\/{_role}": {
            "get": {
                "summary": "Get Role Details",
                "description": "Shows details for a role, by ID.\n\nSpecify the role ID in the roleId parameter in the URI.\n\nhttps:\/\/developer.webex.com\/endpoint-roles-roleId-get.html\n\nExample Response:\n``` json\n{\n  'id' : 'OTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh',\n  'displayName' : 'Full Administrator'\n}\n```",
                "operationId": "RolesByRoleGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "_role",
                        "in": "path",
                        "description": ""
                    }
                ]
            }
        },
        "\/people\/me": {
            "get": {
                "summary": "Get Person Details (me)",
                "description": "Show the profile for the authenticated user.\n\nhttps:\/\/developer.webex.com\/endpoint-people-me-get.html",
                "operationId": "PeopleMeGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "Content",
                        "in": "header",
                        "description": ""
                    }
                ]
            }
        },
        "\/events": {
            "get": {
                "summary": "List Events (new messages)",
                "description": "List events in your organization. Several query parameters are available to filter the response.\nLong result sets will be split into pages.\n\nhttps:\/\/developer.webex.com\/endpoint-events-get.html",
                "operationId": "EventsGet4",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "resource",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": ""
                    }
                ]
            }
        },
        "\/licenses": {
            "get": {
                "summary": "List Licenses",
                "description": "List all licenses for a given organization. If no orgId is specified, the default is the organization of the authenticated user.\n\nhttps:\/\/developer.webex.com\/endpoint-licenses-get.html\n\nExample of a response:\n``` json\n{\n  'items' : [ {\n    'id' : 'OTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh',\n    'displayName' : 'Spark Calling',\n    'totalUnits' : '42',\n    'consumedUnits' : '8'\n  } ]\n}\n```",
                "operationId": "LicensesGet",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/events\/{_event}": {
            "get": {
                "summary": "Get Events Details",
                "description": "Shows details for an event, by event ID.\r\nSpecify the event ID in the eventId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-events-eventId-get.html",
                "operationId": "EventsByEventGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "_event",
                        "in": "path",
                        "description": ""
                    }
                ]
            }
        },
        "\/organizations": {
            "get": {
                "summary": "List Organizations",
                "description": "List all organizations visible by your account.\n\nhttps:\/\/developer.webex.com\/endpoint-organizations-get.html\n\nExample Response:\n``` json\n{\n  'items' : [ {\n    'id' : 'OTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh',\n    'displayName' : 'Acme, Inc.',\n    'created' : '2015-10-18T14:26:16+00:00'\n  } ]\n}\n```",
                "operationId": "OrganizationsGet",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/people": {
            "get": {
                "summary": "List people (with exact email)",
                "description": "List people in your organization.\n\nhttps:\/\/developer.webex.com\/endpoint-people-get.html",
                "operationId": "PeopleGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": ""
                    }
                ]
            },
            "post": {
                "summary": "Create a Person (random)",
                "description": "Create a new user account for a given organization. Only an admin can create a new user account.\n\nhttps:\/\/developer.webex.com\/endpoint-people-post.html\n\nExample Request:\n``` json\n{\n  'emails' : [ 'johnny.chang@foomail.com', 'jchang@barmail.com' ],\n  'displayName' : 'John Andersen',\n  'firstName' : 'John',\n  'lastName' : 'Andersen',\n  'avatar' : 'https:\/\/1efa7a94ed21783e352-c62266528714497a17239ececf39e9e2.ssl.cf1.rackcdn.com\/V1~54c844c89e678e5a7b16a306bc2897b9~wx29yGtlTpilEFlYzqPKag==~1600',\n  '",
                "operationId": "PeoplePost",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "Body",
                        "in": "body",
                        "description": ""
                    },
                    {
                        "name": "Content",
                        "in": "header",
                        "description": ""
                    }
                ]
            }
        },
        "\/organizations\/{_organization}": {
            "get": {
                "summary": "Get Organization Details",
                "description": "Shows details for an organization, by ID.\r\n\r\nSpecify the org ID in the orgId parameter in the URI.\r\n\r\nhttps:\/\/developer.webex.com\/endpoint-organizations-orgId-get.html\r\n\r\nExample Response:\r\n``` json\r\n{\r\n  'id' : 'OTZhYmMyYWEtM2RjYy0xMWU1LWExNTItZmUzNDgxOWNkYzlh',\r\n  'displayName' : 'Acme, Inc.',\r\n  'created' : '2015-10-18T14:26:16+00:00'\r\n}\r\n```",
                "operationId": "OrganizationsByOrganizationGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "_organization",
                        "in": "path",
                        "description": ""
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CreateAPerson(random)request": {
                "type": "object",
                "properties": {
                    "emails": {
                        "description": "",
                        "type": "get"
                    },
                    "firstName": {
                        "description": "",
                        "type": "get"
                    },
                    "lastName": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "UpdateAPersonrequest": {
                "type": "object",
                "properties": {
                    "orgId": {
                        "description": "",
                        "type": "get"
                    },
                    "emails": {
                        "description": "",
                        "type": "get"
                    },
                    "displayName": {
                        "description": "",
                        "type": "get"
                    },
                    "roles": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "GetPersonDetailsresponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "emails": {
                        "description": "",
                        "type": "get"
                    },
                    "displayName": {
                        "description": "",
                        "type": "get"
                    },
                    "firstName": {
                        "description": "",
                        "type": "get"
                    },
                    "lastName": {
                        "description": "",
                        "type": "get"
                    },
                    "avatar": {
                        "description": "",
                        "type": "get"
                    },
                    "orgId": {
                        "description": "",
                        "type": "get"
                    },
                    "roles": {
                        "description": "",
                        "type": "get"
                    },
                    "licenses": {
                        "description": "",
                        "type": "get"
                    },
                    "created": {
                        "description": "",
                        "type": "get"
                    },
                    "timeZone": {
                        "description": "",
                        "type": "get"
                    }
                }
            }
        }
    }
}